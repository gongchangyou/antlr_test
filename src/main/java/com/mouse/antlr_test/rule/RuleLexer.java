// Generated from java-escape by ANTLR 4.11.1

package com.mouse.antlr_test.rule;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class RuleLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, COMPARISON=8, 
		ID=9, NUMBER=10, STRING=11, TRUE=12, FALSE=13, AND=14, OR=15, NOT=16, 
		IN=17, LIKE=18, WS=19;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "COMPARISON", 
			"ID", "NUMBER", "STRING", "TRUE", "FALSE", "AND", "OR", "NOT", "IN", 
			"LIKE", "WS", "T", "R", "U", "E", "A", "N", "O", "F", "L", "I", "K", 
			"S", "D"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'AND'", "'OR'", "'('", "')'", "'['", "','", "']'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, "COMPARISON", "ID", "NUMBER", 
			"STRING", "TRUE", "FALSE", "AND", "OR", "NOT", "IN", "LIKE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RuleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Rule.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0013\u00b4\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002"+
		"\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0003\u0007"+
		"[\b\u0007\u0001\b\u0001\b\u0005\b_\b\b\n\b\f\bb\t\b\u0001\t\u0004\te\b"+
		"\t\u000b\t\f\tf\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0005"+
		"\no\b\n\n\n\f\nr\t\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e"+
		"\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0011"+
		"\u0001\u0012\u0004\u0012\u0095\b\u0012\u000b\u0012\f\u0012\u0096\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a\u0001\u001a\u0001"+
		"\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001"+
		"\u001e\u0001\u001e\u0001\u001f\u0001\u001f\u0000\u0000 \u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0011#\u0012%\u0013\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u0000"+
		"5\u00007\u00009\u0000;\u0000=\u0000?\u0000\u0001\u0000\u0013\u0002\u0000"+
		"<<>>\u0003\u0000AZ__az\u0004\u000009AZ__az\u0001\u000009\u0002\u0000\""+
		"\"\\\\\u0003\u0000\t\n\r\r  \u0002\u0000TTtt\u0002\u0000RRrr\u0002\u0000"+
		"UUuu\u0002\u0000EEee\u0002\u0000AAaa\u0002\u0000NNnn\u0002\u0000OOoo\u0002"+
		"\u0000FFff\u0002\u0000LLll\u0002\u0000IIii\u0002\u0000KKkk\u0002\u0000"+
		"KKss\u0002\u0000DDdd\u00b0\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0001A\u0001\u0000\u0000\u0000\u0003E"+
		"\u0001\u0000\u0000\u0000\u0005H\u0001\u0000\u0000\u0000\u0007J\u0001\u0000"+
		"\u0000\u0000\tL\u0001\u0000\u0000\u0000\u000bN\u0001\u0000\u0000\u0000"+
		"\rP\u0001\u0000\u0000\u0000\u000fZ\u0001\u0000\u0000\u0000\u0011\\\u0001"+
		"\u0000\u0000\u0000\u0013d\u0001\u0000\u0000\u0000\u0015h\u0001\u0000\u0000"+
		"\u0000\u0017u\u0001\u0000\u0000\u0000\u0019z\u0001\u0000\u0000\u0000\u001b"+
		"\u0080\u0001\u0000\u0000\u0000\u001d\u0084\u0001\u0000\u0000\u0000\u001f"+
		"\u0087\u0001\u0000\u0000\u0000!\u008b\u0001\u0000\u0000\u0000#\u008e\u0001"+
		"\u0000\u0000\u0000%\u0094\u0001\u0000\u0000\u0000\'\u009a\u0001\u0000"+
		"\u0000\u0000)\u009c\u0001\u0000\u0000\u0000+\u009e\u0001\u0000\u0000\u0000"+
		"-\u00a0\u0001\u0000\u0000\u0000/\u00a2\u0001\u0000\u0000\u00001\u00a4"+
		"\u0001\u0000\u0000\u00003\u00a6\u0001\u0000\u0000\u00005\u00a8\u0001\u0000"+
		"\u0000\u00007\u00aa\u0001\u0000\u0000\u00009\u00ac\u0001\u0000\u0000\u0000"+
		";\u00ae\u0001\u0000\u0000\u0000=\u00b0\u0001\u0000\u0000\u0000?\u00b2"+
		"\u0001\u0000\u0000\u0000AB\u0005A\u0000\u0000BC\u0005N\u0000\u0000CD\u0005"+
		"D\u0000\u0000D\u0002\u0001\u0000\u0000\u0000EF\u0005O\u0000\u0000FG\u0005"+
		"R\u0000\u0000G\u0004\u0001\u0000\u0000\u0000HI\u0005(\u0000\u0000I\u0006"+
		"\u0001\u0000\u0000\u0000JK\u0005)\u0000\u0000K\b\u0001\u0000\u0000\u0000"+
		"LM\u0005[\u0000\u0000M\n\u0001\u0000\u0000\u0000NO\u0005,\u0000\u0000"+
		"O\f\u0001\u0000\u0000\u0000PQ\u0005]\u0000\u0000Q\u000e\u0001\u0000\u0000"+
		"\u0000R[\u0007\u0000\u0000\u0000ST\u0005>\u0000\u0000T[\u0005=\u0000\u0000"+
		"UV\u0005<\u0000\u0000V[\u0005=\u0000\u0000W[\u0005=\u0000\u0000XY\u0005"+
		"<\u0000\u0000Y[\u0005>\u0000\u0000ZR\u0001\u0000\u0000\u0000ZS\u0001\u0000"+
		"\u0000\u0000ZU\u0001\u0000\u0000\u0000ZW\u0001\u0000\u0000\u0000ZX\u0001"+
		"\u0000\u0000\u0000[\u0010\u0001\u0000\u0000\u0000\\`\u0007\u0001\u0000"+
		"\u0000]_\u0007\u0002\u0000\u0000^]\u0001\u0000\u0000\u0000_b\u0001\u0000"+
		"\u0000\u0000`^\u0001\u0000\u0000\u0000`a\u0001\u0000\u0000\u0000a\u0012"+
		"\u0001\u0000\u0000\u0000b`\u0001\u0000\u0000\u0000ce\u0007\u0003\u0000"+
		"\u0000dc\u0001\u0000\u0000\u0000ef\u0001\u0000\u0000\u0000fd\u0001\u0000"+
		"\u0000\u0000fg\u0001\u0000\u0000\u0000g\u0014\u0001\u0000\u0000\u0000"+
		"hp\u0005\"\u0000\u0000io\b\u0004\u0000\u0000jk\u0005\\\u0000\u0000ko\u0005"+
		"\"\u0000\u0000lm\u0005\\\u0000\u0000mo\u0005\\\u0000\u0000ni\u0001\u0000"+
		"\u0000\u0000nj\u0001\u0000\u0000\u0000nl\u0001\u0000\u0000\u0000or\u0001"+
		"\u0000\u0000\u0000pn\u0001\u0000\u0000\u0000pq\u0001\u0000\u0000\u0000"+
		"qs\u0001\u0000\u0000\u0000rp\u0001\u0000\u0000\u0000st\u0005\"\u0000\u0000"+
		"t\u0016\u0001\u0000\u0000\u0000uv\u0003\'\u0013\u0000vw\u0003)\u0014\u0000"+
		"wx\u0003+\u0015\u0000xy\u0003-\u0016\u0000y\u0018\u0001\u0000\u0000\u0000"+
		"z{\u00035\u001a\u0000{|\u0003/\u0017\u0000|}\u00037\u001b\u0000}~\u0003"+
		"=\u001e\u0000~\u007f\u0003-\u0016\u0000\u007f\u001a\u0001\u0000\u0000"+
		"\u0000\u0080\u0081\u0003/\u0017\u0000\u0081\u0082\u00031\u0018\u0000\u0082"+
		"\u0083\u0003?\u001f\u0000\u0083\u001c\u0001\u0000\u0000\u0000\u0084\u0085"+
		"\u00033\u0019\u0000\u0085\u0086\u0003)\u0014\u0000\u0086\u001e\u0001\u0000"+
		"\u0000\u0000\u0087\u0088\u00031\u0018\u0000\u0088\u0089\u00033\u0019\u0000"+
		"\u0089\u008a\u0003\'\u0013\u0000\u008a \u0001\u0000\u0000\u0000\u008b"+
		"\u008c\u00039\u001c\u0000\u008c\u008d\u00031\u0018\u0000\u008d\"\u0001"+
		"\u0000\u0000\u0000\u008e\u008f\u00037\u001b\u0000\u008f\u0090\u00039\u001c"+
		"\u0000\u0090\u0091\u0003;\u001d\u0000\u0091\u0092\u0003-\u0016\u0000\u0092"+
		"$\u0001\u0000\u0000\u0000\u0093\u0095\u0007\u0005\u0000\u0000\u0094\u0093"+
		"\u0001\u0000\u0000\u0000\u0095\u0096\u0001\u0000\u0000\u0000\u0096\u0094"+
		"\u0001\u0000\u0000\u0000\u0096\u0097\u0001\u0000\u0000\u0000\u0097\u0098"+
		"\u0001\u0000\u0000\u0000\u0098\u0099\u0006\u0012\u0000\u0000\u0099&\u0001"+
		"\u0000\u0000\u0000\u009a\u009b\u0007\u0006\u0000\u0000\u009b(\u0001\u0000"+
		"\u0000\u0000\u009c\u009d\u0007\u0007\u0000\u0000\u009d*\u0001\u0000\u0000"+
		"\u0000\u009e\u009f\u0007\b\u0000\u0000\u009f,\u0001\u0000\u0000\u0000"+
		"\u00a0\u00a1\u0007\t\u0000\u0000\u00a1.\u0001\u0000\u0000\u0000\u00a2"+
		"\u00a3\u0007\n\u0000\u0000\u00a30\u0001\u0000\u0000\u0000\u00a4\u00a5"+
		"\u0007\u000b\u0000\u0000\u00a52\u0001\u0000\u0000\u0000\u00a6\u00a7\u0007"+
		"\f\u0000\u0000\u00a74\u0001\u0000\u0000\u0000\u00a8\u00a9\u0007\r\u0000"+
		"\u0000\u00a96\u0001\u0000\u0000\u0000\u00aa\u00ab\u0007\u000e\u0000\u0000"+
		"\u00ab8\u0001\u0000\u0000\u0000\u00ac\u00ad\u0007\u000f\u0000\u0000\u00ad"+
		":\u0001\u0000\u0000\u0000\u00ae\u00af\u0007\u0010\u0000\u0000\u00af<\u0001"+
		"\u0000\u0000\u0000\u00b0\u00b1\u0007\u0011\u0000\u0000\u00b1>\u0001\u0000"+
		"\u0000\u0000\u00b2\u00b3\u0007\u0012\u0000\u0000\u00b3@\u0001\u0000\u0000"+
		"\u0000\u0007\u0000Z`fnp\u0096\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}