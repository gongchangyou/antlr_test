// Generated from java-escape by ANTLR 4.11.1

package com.mouse.antlr_test.rule;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class RuleLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, COMPARISON=6, NUMBER=7, STRING=8, 
		TRUE=9, FALSE=10, AND=11, OR=12, NOT=13, IN=14, LIKE=15, ID=16, WS=17;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "COMPARISON", "NUMBER", "STRING", 
			"TRUE", "FALSE", "AND", "OR", "NOT", "IN", "LIKE", "ID", "WS", "T", "R", 
			"U", "E", "A", "N", "O", "F", "L", "I", "K", "S", "D"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'('", "')'", "'['", "','", "']'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, "COMPARISON", "NUMBER", "STRING", 
			"TRUE", "FALSE", "AND", "OR", "NOT", "IN", "LIKE", "ID", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public RuleLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Rule.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0011\u00a9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0003\u0005P\b\u0005\u0001\u0006\u0004\u0006S\b\u0006\u000b\u0006\f\u0006"+
		"T\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0005\u0007]\b\u0007\n\u0007\f\u0007`\t\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001"+
		"\u000f\u0005\u000f\u0084\b\u000f\n\u000f\f\u000f\u0087\t\u000f\u0001\u0010"+
		"\u0004\u0010\u008a\b\u0010\u000b\u0010\f\u0010\u008b\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0000\u0000\u001e\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0000%\u0000\'\u0000)\u0000+\u0000-\u0000/\u00001\u00003\u00005\u0000"+
		"7\u00009\u0000;\u0000\u0001\u0000\u0013\u0002\u0000<<>>\u0001\u000009"+
		"\u0002\u0000\"\"\\\\\u0004\u0000%%AZ__az\u0005\u0000%%09AZ__az\u0003\u0000"+
		"\t\n\r\r  \u0002\u0000TTtt\u0002\u0000RRrr\u0002\u0000UUuu\u0002\u0000"+
		"EEee\u0002\u0000AAaa\u0002\u0000NNnn\u0002\u0000OOoo\u0002\u0000FFff\u0002"+
		"\u0000LLll\u0002\u0000IIii\u0002\u0000KKkk\u0002\u0000KKss\u0002\u0000"+
		"DDdd\u00a5\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000"+
		"\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000"+
		"\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000"+
		"\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000"+
		"\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000"+
		"\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000"+
		"\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000"+
		"\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000"+
		"\u0000!\u0001\u0000\u0000\u0000\u0001=\u0001\u0000\u0000\u0000\u0003?"+
		"\u0001\u0000\u0000\u0000\u0005A\u0001\u0000\u0000\u0000\u0007C\u0001\u0000"+
		"\u0000\u0000\tE\u0001\u0000\u0000\u0000\u000bO\u0001\u0000\u0000\u0000"+
		"\rR\u0001\u0000\u0000\u0000\u000fV\u0001\u0000\u0000\u0000\u0011c\u0001"+
		"\u0000\u0000\u0000\u0013h\u0001\u0000\u0000\u0000\u0015n\u0001\u0000\u0000"+
		"\u0000\u0017r\u0001\u0000\u0000\u0000\u0019u\u0001\u0000\u0000\u0000\u001b"+
		"y\u0001\u0000\u0000\u0000\u001d|\u0001\u0000\u0000\u0000\u001f\u0081\u0001"+
		"\u0000\u0000\u0000!\u0089\u0001\u0000\u0000\u0000#\u008f\u0001\u0000\u0000"+
		"\u0000%\u0091\u0001\u0000\u0000\u0000\'\u0093\u0001\u0000\u0000\u0000"+
		")\u0095\u0001\u0000\u0000\u0000+\u0097\u0001\u0000\u0000\u0000-\u0099"+
		"\u0001\u0000\u0000\u0000/\u009b\u0001\u0000\u0000\u00001\u009d\u0001\u0000"+
		"\u0000\u00003\u009f\u0001\u0000\u0000\u00005\u00a1\u0001\u0000\u0000\u0000"+
		"7\u00a3\u0001\u0000\u0000\u00009\u00a5\u0001\u0000\u0000\u0000;\u00a7"+
		"\u0001\u0000\u0000\u0000=>\u0005(\u0000\u0000>\u0002\u0001\u0000\u0000"+
		"\u0000?@\u0005)\u0000\u0000@\u0004\u0001\u0000\u0000\u0000AB\u0005[\u0000"+
		"\u0000B\u0006\u0001\u0000\u0000\u0000CD\u0005,\u0000\u0000D\b\u0001\u0000"+
		"\u0000\u0000EF\u0005]\u0000\u0000F\n\u0001\u0000\u0000\u0000GP\u0007\u0000"+
		"\u0000\u0000HI\u0005>\u0000\u0000IP\u0005=\u0000\u0000JK\u0005<\u0000"+
		"\u0000KP\u0005=\u0000\u0000LP\u0005=\u0000\u0000MN\u0005<\u0000\u0000"+
		"NP\u0005>\u0000\u0000OG\u0001\u0000\u0000\u0000OH\u0001\u0000\u0000\u0000"+
		"OJ\u0001\u0000\u0000\u0000OL\u0001\u0000\u0000\u0000OM\u0001\u0000\u0000"+
		"\u0000P\f\u0001\u0000\u0000\u0000QS\u0007\u0001\u0000\u0000RQ\u0001\u0000"+
		"\u0000\u0000ST\u0001\u0000\u0000\u0000TR\u0001\u0000\u0000\u0000TU\u0001"+
		"\u0000\u0000\u0000U\u000e\u0001\u0000\u0000\u0000V^\u0005\"\u0000\u0000"+
		"W]\b\u0002\u0000\u0000XY\u0005\\\u0000\u0000Y]\u0005\"\u0000\u0000Z[\u0005"+
		"\\\u0000\u0000[]\u0005\\\u0000\u0000\\W\u0001\u0000\u0000\u0000\\X\u0001"+
		"\u0000\u0000\u0000\\Z\u0001\u0000\u0000\u0000]`\u0001\u0000\u0000\u0000"+
		"^\\\u0001\u0000\u0000\u0000^_\u0001\u0000\u0000\u0000_a\u0001\u0000\u0000"+
		"\u0000`^\u0001\u0000\u0000\u0000ab\u0005\"\u0000\u0000b\u0010\u0001\u0000"+
		"\u0000\u0000cd\u0003#\u0011\u0000de\u0003%\u0012\u0000ef\u0003\'\u0013"+
		"\u0000fg\u0003)\u0014\u0000g\u0012\u0001\u0000\u0000\u0000hi\u00031\u0018"+
		"\u0000ij\u0003+\u0015\u0000jk\u00033\u0019\u0000kl\u00039\u001c\u0000"+
		"lm\u0003)\u0014\u0000m\u0014\u0001\u0000\u0000\u0000no\u0003+\u0015\u0000"+
		"op\u0003-\u0016\u0000pq\u0003;\u001d\u0000q\u0016\u0001\u0000\u0000\u0000"+
		"rs\u0003/\u0017\u0000st\u0003%\u0012\u0000t\u0018\u0001\u0000\u0000\u0000"+
		"uv\u0003-\u0016\u0000vw\u0003/\u0017\u0000wx\u0003#\u0011\u0000x\u001a"+
		"\u0001\u0000\u0000\u0000yz\u00035\u001a\u0000z{\u0003-\u0016\u0000{\u001c"+
		"\u0001\u0000\u0000\u0000|}\u00033\u0019\u0000}~\u00035\u001a\u0000~\u007f"+
		"\u00037\u001b\u0000\u007f\u0080\u0003)\u0014\u0000\u0080\u001e\u0001\u0000"+
		"\u0000\u0000\u0081\u0085\u0007\u0003\u0000\u0000\u0082\u0084\u0007\u0004"+
		"\u0000\u0000\u0083\u0082\u0001\u0000\u0000\u0000\u0084\u0087\u0001\u0000"+
		"\u0000\u0000\u0085\u0083\u0001\u0000\u0000\u0000\u0085\u0086\u0001\u0000"+
		"\u0000\u0000\u0086 \u0001\u0000\u0000\u0000\u0087\u0085\u0001\u0000\u0000"+
		"\u0000\u0088\u008a\u0007\u0005\u0000\u0000\u0089\u0088\u0001\u0000\u0000"+
		"\u0000\u008a\u008b\u0001\u0000\u0000\u0000\u008b\u0089\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000"+
		"\u0000\u008d\u008e\u0006\u0010\u0000\u0000\u008e\"\u0001\u0000\u0000\u0000"+
		"\u008f\u0090\u0007\u0006\u0000\u0000\u0090$\u0001\u0000\u0000\u0000\u0091"+
		"\u0092\u0007\u0007\u0000\u0000\u0092&\u0001\u0000\u0000\u0000\u0093\u0094"+
		"\u0007\b\u0000\u0000\u0094(\u0001\u0000\u0000\u0000\u0095\u0096\u0007"+
		"\t\u0000\u0000\u0096*\u0001\u0000\u0000\u0000\u0097\u0098\u0007\n\u0000"+
		"\u0000\u0098,\u0001\u0000\u0000\u0000\u0099\u009a\u0007\u000b\u0000\u0000"+
		"\u009a.\u0001\u0000\u0000\u0000\u009b\u009c\u0007\f\u0000\u0000\u009c"+
		"0\u0001\u0000\u0000\u0000\u009d\u009e\u0007\r\u0000\u0000\u009e2\u0001"+
		"\u0000\u0000\u0000\u009f\u00a0\u0007\u000e\u0000\u0000\u00a04\u0001\u0000"+
		"\u0000\u0000\u00a1\u00a2\u0007\u000f\u0000\u0000\u00a26\u0001\u0000\u0000"+
		"\u0000\u00a3\u00a4\u0007\u0010\u0000\u0000\u00a48\u0001\u0000\u0000\u0000"+
		"\u00a5\u00a6\u0007\u0011\u0000\u0000\u00a6:\u0001\u0000\u0000\u0000\u00a7"+
		"\u00a8\u0007\u0012\u0000\u0000\u00a8<\u0001\u0000\u0000\u0000\u0007\u0000"+
		"OT\\^\u0085\u008b\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}